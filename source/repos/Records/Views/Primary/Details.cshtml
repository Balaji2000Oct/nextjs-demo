@model Records.Models.ValidateForm

@{
    ViewBag.Title = "Details";
}

<h2>Details </h2>
<h3> Welcome @TempData["a"]</h3>
@{
    TempData.Keep("a");
}
@{
    string r = Convert.ToString(TempData["a"]);
    string s = Convert.ToString(TempData["b"]);
}

<div>
   
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.DinnerId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DinnerId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HostedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HostedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EventDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EventDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ContactPhone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ContactPhone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt id="one">
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>

        <dd id="two">
            @Html.DisplayFor(model => model.Latitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Longtitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Longtitude)
        </dd>

    </dl>
</div>
@{
    var lati = Model.Latitude;
    var lon = Model.Longtitude;
}
<script>

    var nonID = @lati;
    var proID = @lon;


</script>
<style>
    #map {
        height: 500px;
    }
</style>
<br />
<br />
<div id="map"></div>
<script>
    var latti = nonID
    var longi = proID;
    var map;
    function initMap() {
        // The location of Uluru
        const uluru = { lat: latti, lng: longi };

        // The map, centered at Uluru
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 5,
            center: uluru,
        });
        const marker = new google.maps.Marker({
            position: uluru,
            map: map,
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD1HK_uP_zFhs7epQyj2RzgT_bo6Q1V7rk&callback=initMap" async defer></script>

@{
    var v = Model.HostedBy;
}


<div class="bg-success" style="text-align:center">
    <a href="@Url.Action("Book","History",new { n=v,name=r})" class="btn-danger" style="text-align:center">Book </a>
</div>
<div class="bg-warning" style="text-align:center">

    @Html.ActionLink("Back to List", "DisplayUser")
</div>